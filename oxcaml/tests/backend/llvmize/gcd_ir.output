source_filename = "gcd.ml"

@camlGcd__data_begin = global i64 0
define void @camlGcd__code_begin() { ret void }

define i64 @camlGcd__gcd_0_1_code(i64 %0)  {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca i64
  %15 = alloca i64
  %16 = alloca i64
  %17 = alloca i64
  %18 = alloca i64
  %19 = alloca i64
  %20 = alloca i64
  %21 = alloca i64
  %22 = alloca i64
  %23 = alloca i64
  %24 = alloca i64
  %25 = alloca i64
  %26 = alloca i64
  %27 = alloca i64
  %28 = alloca i64
  %29 = alloca i64
  %30 = alloca i64
  %31 = alloca i64
  %32 = alloca i64
  %33 = alloca i64
  %34 = alloca i64
  %35 = alloca i64
  %36 = alloca i64
  %37 = alloca i64
  %38 = alloca i64
  %39 = alloca i64
  %40 = alloca i64
  %41 = alloca i64
  %42 = alloca i64
  store i64 %0, ptr %2
  br label %L1
L1:
  br label %L101
L101:                                                ; preds = %L1
  %51 = load i64, ptr %2
  store i64 %51, ptr %5
  br label %L109
L109:                                                ; preds = %L101, %L128
  store ptr @camlGcd__gcd_1, ptr %6
  %52 = load i64, ptr %6
  store i64 %52, ptr %7
  %53 = load i64, ptr %7
  %54 = add i64 %53, 24
  store i64 %54, ptr %7
  %55 = load i64, ptr %7
  %56 = add i64 %55, 0
  %57 = inttoptr i64 %56 to ptr
  %58 = load i64, ptr %57
  store i64 %58, ptr %8
  %59 = load i64, ptr %8
  %60 = add i64 %59, 0
  %61 = inttoptr i64 %60 to ptr
  %62 = load i64, ptr %61
  store i64 %62, ptr %9
  %63 = load i64, ptr %9
  %64 = icmp slt i64 %63, 1
  br i1 %64, label %L114, label %65
65:
  %66 = load i64, ptr %9
  %67 = icmp sgt i64 %66, 1
  br i1 %67, label %L114, label %L151
L114:                                                ; preds = %L109
  store ptr @camlGcd__gcd_1, ptr %10
  %68 = load i64, ptr %10
  store i64 %68, ptr %11
  %69 = load i64, ptr %11
  %70 = add i64 %69, 24
  store i64 %70, ptr %11
  %71 = load i64, ptr %11
  %72 = add i64 %71, 0
  %73 = inttoptr i64 %72 to ptr
  %74 = load i64, ptr %73
  store i64 %74, ptr %12
  %75 = load i64, ptr %12
  %76 = add i64 %75, 0
  %77 = inttoptr i64 %76 to ptr
  %78 = load i64, ptr %77
  store i64 %78, ptr %13
  %79 = load i64, ptr %13
  store i64 %79, ptr %14
  store ptr @camlGcd__gcd_1, ptr %15
  %80 = load i64, ptr %15
  store i64 %80, ptr %16
  %81 = load i64, ptr %16
  %82 = add i64 %81, 24
  store i64 %82, ptr %16
  %83 = load i64, ptr %16
  %84 = add i64 %83, 0
  %85 = inttoptr i64 %84 to ptr
  %86 = load i64, ptr %85
  store i64 %86, ptr %17
  %87 = load i64, ptr %17
  %88 = add i64 %87, 0
  %89 = inttoptr i64 %88 to ptr
  %90 = load i64, ptr %89
  store i64 %90, ptr %18
  %91 = load i64, ptr %18
  store i64 %91, ptr %19
  store ptr @camlGcd__gcd_1, ptr %20
  %92 = load i64, ptr %20
  store i64 %92, ptr %21
  %93 = load i64, ptr %21
  %94 = add i64 %93, 32
  store i64 %94, ptr %21
  %95 = load i64, ptr %21
  %96 = add i64 %95, 0
  %97 = inttoptr i64 %96 to ptr
  %98 = load i64, ptr %97
  store i64 %98, ptr %22
  %99 = load i64, ptr %22
  %100 = add i64 %99, 0
  %101 = inttoptr i64 %100 to ptr
  %102 = load i64, ptr %101
  store i64 %102, ptr %23
  %103 = load i64, ptr %23
  store i64 %103, ptr %24
  %104 = load i64, ptr %19
  %105 = icmp slt i64 %104, 1
  br i1 %105, label %L128, label %106
106:
  %107 = load i64, ptr %19
  %108 = icmp sgt i64 %107, 1
  br i1 %108, label %L128, label %L144
L128:                                                ; preds = %L114
  store ptr @camlGcd__gcd_1, ptr %25
  %109 = load i64, ptr %25
  store i64 %109, ptr %26
  %110 = load i64, ptr %26
  %111 = add i64 %110, 32
  store i64 %111, ptr %26
  %112 = load i64, ptr %26
  %113 = add i64 %112, 0
  %114 = inttoptr i64 %113 to ptr
  %115 = load i64, ptr %114
  store i64 %115, ptr %27
  %116 = load i64, ptr %27
  %117 = add i64 %116, 0
  %118 = inttoptr i64 %117 to ptr
  %119 = load i64, ptr %14
  store i64 %119, ptr %118
  store i64 1, ptr %28
  %120 = load i64, ptr %28
  store i64 %120, ptr %29
  store ptr @camlGcd__gcd_1, ptr %30
  %121 = load i64, ptr %30
  store i64 %121, ptr %31
  %122 = load i64, ptr %31
  %123 = add i64 %122, 24
  store i64 %123, ptr %31
  %124 = load i64, ptr %31
  %125 = add i64 %124, 0
  %126 = inttoptr i64 %125 to ptr
  %127 = load i64, ptr %126
  store i64 %127, ptr %32
  %128 = load i64, ptr %19
  store i64 %128, ptr %33
  %129 = load i64, ptr %33
  %130 = ashr i64 %129, 1
  store i64 %130, ptr %33
  %131 = load i64, ptr %24
  store i64 %131, ptr %34
  %132 = load i64, ptr %34
  %133 = ashr i64 %132, 1
  store i64 %133, ptr %34
  %134 = load i64, ptr %34
  store i64 %134, ptr %2
  %135 = load i64, ptr %33
  store i64 %135, ptr %4
  %136 = load i64, ptr %2
  %137 = load i64, ptr %4
  %138 = srem i64 %136, %137
  store i64 %138, ptr %3
  %139 = load i64, ptr %3
  store i64 %139, ptr %35
  %140 = load i64, ptr %35
  store i64 %140, ptr %36
  %141 = load i64, ptr %36
  %142 = shl i64 %141, 1
  store i64 %142, ptr %36
  %143 = load i64, ptr %36
  store i64 %143, ptr %37
  %144 = load i64, ptr %37
  %145 = add i64 %144, 1
  store i64 %145, ptr %37
  %146 = load i64, ptr %32
  %147 = add i64 %146, 0
  %148 = inttoptr i64 %147 to ptr
  %149 = load i64, ptr %37
  store i64 %149, ptr %148
  store i64 1, ptr %38
  %150 = load i64, ptr %38
  store i64 %150, ptr %39
  br label %L109
L144:                                                ; preds = %L114
  store ptr @caml_exn_Division_by_zero, ptr %40
  %151 = load i64, ptr %40
  store i64 %151, ptr %2
  call void @llvm.trap()
  unreachable
L151:                                                ; preds = %L109
  store ptr @camlGcd__gcd_1, ptr %41
  %152 = load i64, ptr %41
  store i64 %152, ptr %42
  %153 = load i64, ptr %42
  %154 = add i64 %153, 16
  store i64 %154, ptr %42
  %155 = load i64, ptr %42
  %156 = add i64 %155, 0
  %157 = inttoptr i64 %156 to ptr
  %158 = load i64, ptr %157
  store i64 %158, ptr %43
  store ptr @camlGcd__gcd_1, ptr %44
  %159 = load i64, ptr %44
  store i64 %159, ptr %45
  %160 = load i64, ptr %45
  %161 = add i64 %160, 32
  store i64 %161, ptr %45
  %162 = load i64, ptr %45
  %163 = add i64 %162, 0
  %164 = inttoptr i64 %163 to ptr
  %165 = load i64, ptr %164
  store i64 %165, ptr %46
  %166 = load i64, ptr %46
  %167 = add i64 %166, 0
  %168 = inttoptr i64 %167 to ptr
  %169 = load i64, ptr %168
  store i64 %169, ptr %47
  %170 = load i64, ptr %43
  %171 = add i64 %170, 0
  %172 = inttoptr i64 %171 to ptr
  %173 = load i64, ptr %47
  store i64 %173, ptr %172
  store i64 1, ptr %48
  %174 = load i64, ptr %48
  store i64 %174, ptr %49
  store i64 1, ptr %50
  %175 = load i64, ptr %50
  store i64 %175, ptr %2
  %176 = load i64, ptr %2
  ret i64 %176
}

define i64 @camlGcd__entry()  {
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca i64
  %15 = alloca i64
  %16 = alloca i64
  %17 = alloca i64
  %18 = alloca i64
  %19 = alloca i64
  %20 = alloca i64
  br label %L1
L1:
  br label %L164
L164:                                                ; preds = %L1
  store ptr @camlGcd_data, ptr %3
  %28 = load i64, ptr %3
  %29 = add i64 %28, 0
  %30 = inttoptr i64 %29 to ptr
  %31 = load i64, ptr %30
  store i64 %31, ptr %4
  %32 = load i64, ptr %4
  store i64 %32, ptr %5
  store ptr @camlGcd__gcd_1, ptr %6
  %33 = load i64, ptr %6
  store i64 %33, ptr %7
  %34 = load i64, ptr %7
  %35 = add i64 %34, 32
  store i64 %35, ptr %7
  %36 = load i64, ptr %7
  %37 = add i64 %36, 0
  %38 = inttoptr i64 %37 to ptr
  %39 = load i64, ptr %5
  store i64 %39, ptr %38
  store ptr @camlGcd, ptr %8
  %40 = load i64, ptr %8
  %41 = add i64 %40, 0
  %42 = inttoptr i64 %41 to ptr
  %43 = load i64, ptr %5
  store i64 %43, ptr %42
  store ptr @camlGcd_data, ptr %9
  %44 = load i64, ptr %9
  store i64 %44, ptr %10
  %45 = load i64, ptr %10
  %46 = add i64 %45, 8
  store i64 %46, ptr %10
  %47 = load i64, ptr %10
  %48 = add i64 %47, 0
  %49 = inttoptr i64 %48 to ptr
  %50 = load i64, ptr %49
  store i64 %50, ptr %11
  %51 = load i64, ptr %11
  store i64 %51, ptr %12
  store ptr @camlGcd__gcd_1, ptr %13
  %52 = load i64, ptr %13
  store i64 %52, ptr %14
  %53 = load i64, ptr %14
  %54 = add i64 %53, 24
  store i64 %54, ptr %14
  %55 = load i64, ptr %14
  %56 = add i64 %55, 0
  %57 = inttoptr i64 %56 to ptr
  %58 = load i64, ptr %12
  store i64 %58, ptr %57
  store ptr @camlGcd, ptr %15
  %59 = load i64, ptr %15
  store i64 %59, ptr %16
  %60 = load i64, ptr %16
  %61 = add i64 %60, 8
  store i64 %61, ptr %16
  %62 = load i64, ptr %16
  %63 = add i64 %62, 0
  %64 = inttoptr i64 %63 to ptr
  %65 = load i64, ptr %12
  store i64 %65, ptr %64
  store ptr @camlGcd_data, ptr %17
  %66 = load i64, ptr %17
  store i64 %66, ptr %18
  %67 = load i64, ptr %18
  %68 = add i64 %67, 16
  store i64 %68, ptr %18
  %69 = load i64, ptr %18
  %70 = add i64 %69, 0
  %71 = inttoptr i64 %70 to ptr
  %72 = load i64, ptr %71
  store i64 %72, ptr %19
  %73 = load i64, ptr %19
  store i64 %73, ptr %20
  store ptr @camlGcd__gcd_1, ptr %21
  %74 = load i64, ptr %21
  store i64 %74, ptr %22
  %75 = load i64, ptr %22
  %76 = add i64 %75, 16
  store i64 %76, ptr %22
  %77 = load i64, ptr %22
  %78 = add i64 %77, 0
  %79 = inttoptr i64 %78 to ptr
  %80 = load i64, ptr %20
  store i64 %80, ptr %79
  store ptr @camlGcd, ptr %23
  %81 = load i64, ptr %23
  store i64 %81, ptr %24
  %82 = load i64, ptr %24
  %83 = add i64 %82, 16
  store i64 %83, ptr %24
  %84 = load i64, ptr %24
  %85 = add i64 %84, 0
  %86 = inttoptr i64 %85 to ptr
  %87 = load i64, ptr %20
  store i64 %87, ptr %86
  store ptr @camlGcd, ptr %25
  %88 = load i64, ptr %25
  store i64 %88, ptr %26
  %89 = load i64, ptr %26
  store i64 %89, ptr %2
  store i64 1, ptr %27
  %90 = load i64, ptr %27
  store i64 %90, ptr %1
  %91 = load i64, ptr %1
  ret i64 %91
}

@camlGcd__gc_roots = global { ptr, ptr, i64, i64 } { ptr @camlGcd, ptr @camlGcd__gcd_1, i64 0, i64 4864 }
@camlGcd = global { i64, i64, i64, ptr, i64 } { i64 1, i64 1, i64 1, ptr @camlGcd__gcd_1, i64 6135 }
@camlGcd__gcd_1 = global { ptr, i64, i64, i64, i64 } { ptr @camlGcd__gcd_0_1_code, i64 108086391056891909, i64 1, i64 1, i64 1 }
@camlGcd_data = external global ptr
@caml_exn_Division_by_zero = external global ptr

@camlGcd__data_end = global i64 0
define void @camlGcd__code_end() { ret void }
@camlGcd__frametable = global i64 0
