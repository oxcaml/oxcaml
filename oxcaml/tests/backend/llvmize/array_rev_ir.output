source_filename = "array_rev.ml"

@camlArray_rev__data_begin = global i64 0
define void @camlArray_rev__code_begin() { ret void }

define i64 @camlArray_rev__rev_0_1_code(i64 %0)  {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca i64
  %15 = alloca i64
  %16 = alloca i64
  %17 = alloca i64
  %18 = alloca i64
  %19 = alloca i64
  %20 = alloca i64
  %21 = alloca i64
  %22 = alloca i64
  %23 = alloca i64
  %24 = alloca i64
  %25 = alloca i64
  %26 = alloca i64
  %27 = alloca i64
  %28 = alloca i64
  %29 = alloca i64
  %30 = alloca i64
  %31 = alloca i64
  %32 = alloca i64
  %33 = alloca i64
  %34 = alloca i64
  %35 = alloca i64
  %36 = alloca i64
  %37 = alloca i64
  %38 = alloca i64
  %39 = alloca i64
  %40 = alloca i64
  store i64 %0, ptr %2
  br label %L1
L1:
  br label %L101
L101:                                                ; preds = %L1
  %41 = load i64, ptr %2
  store i64 %41, ptr %3
  store ptr @camlArray_rev__rev_1, ptr %4
  %42 = load i64, ptr %4
  %43 = add i64 %42, 16
  %44 = inttoptr i64 %43 to ptr
  %45 = load i64, ptr %44
  store i64 %45, ptr %5
  %46 = load i64, ptr %5
  store i64 %46, ptr %6
  %47 = load i64, ptr %6
  %48 = ashr i64 %47, 1
  store i64 %48, ptr %6
  %49 = load i64, ptr %6
  store i64 %49, ptr %7
  %50 = load i64, ptr %7
  store i64 %50, ptr %8
  %51 = load i64, ptr %8
  %52 = lshr i64 %51, 63
  store i64 %52, ptr %8
  %53 = load i64, ptr %7
  store i64 %53, ptr %9
  %54 = load i64, ptr %9
  %55 = load i64, ptr %8
  %56 = add i64 %54, %55
  store i64 %56, ptr %9
  %57 = load i64, ptr %9
  store i64 %57, ptr %10
  %58 = load i64, ptr %10
  %59 = ashr i64 %58, 1
  store i64 %59, ptr %10
  %60 = load i64, ptr %10
  store i64 %60, ptr %11
  %61 = load i64, ptr %11
  %62 = shl i64 %61, 1
  store i64 %62, ptr %11
  %63 = load i64, ptr %11
  store i64 %63, ptr %12
  %64 = load i64, ptr %12
  %65 = add i64 %64, -1
  store i64 %65, ptr %12
  %66 = load i64, ptr %12
  store i64 %66, ptr %13
  %67 = load i64, ptr %13
  %68 = icmp slt i64 %67, 1
  br i1 %68, label %L135, label %69
69:
  %70 = load i64, ptr %13
  %71 = icmp sgt i64 %70, 1
  br i1 %71, label %L113, label %L113
L113:                                                ; preds = %L101
  store i64 1, ptr %15
  %72 = load i64, ptr %15
  store i64 %72, ptr %16
  %73 = load i64, ptr %16
  store i64 %73, ptr %14
  br label %L115
L115:                                                ; preds = %L113, %L128
  store ptr @camlArray_rev__rev_1, ptr %17
  %74 = load i64, ptr %17
  %75 = add i64 %74, 24
  %76 = inttoptr i64 %75 to ptr
  %77 = load i64, ptr %76
  store i64 %77, ptr %18
  %78 = load i64, ptr %18
  %79 = load i64, ptr %14
  %80 = mul i64 %79, 4
  %81 = add i64 %80, %78
  %82 = add i64 %81, -4
  %83 = inttoptr i64 %82 to ptr
  %84 = load i64, ptr %83
  store i64 %84, ptr %19
  %85 = load i64, ptr %19
  store i64 %85, ptr %20
  store ptr @camlArray_rev__rev_1, ptr %21
  %86 = load i64, ptr %21
  %87 = add i64 %86, 16
  %88 = inttoptr i64 %87 to ptr
  %89 = load i64, ptr %88
  store i64 %89, ptr %22
  %90 = load i64, ptr %22
  store i64 %90, ptr %23
  %91 = load i64, ptr %23
  %92 = load i64, ptr %14
  %93 = sub i64 %91, %92
  store i64 %93, ptr %23
  %94 = load i64, ptr %23
  store i64 %94, ptr %24
  %95 = load i64, ptr %24
  %96 = add i64 %95, -1
  store i64 %96, ptr %24
  %97 = load i64, ptr %24
  store i64 %97, ptr %25
  store ptr @camlArray_rev__rev_1, ptr %26
  %98 = load i64, ptr %26
  %99 = add i64 %98, 24
  %100 = inttoptr i64 %99 to ptr
  %101 = load i64, ptr %100
  store i64 %101, ptr %27
  store ptr @camlArray_rev__rev_1, ptr %28
  %102 = load i64, ptr %28
  %103 = add i64 %102, 24
  %104 = inttoptr i64 %103 to ptr
  %105 = load i64, ptr %104
  store i64 %105, ptr %29
  %106 = load i64, ptr %29
  %107 = load i64, ptr %25
  %108 = mul i64 %107, 4
  %109 = add i64 %108, %106
  %110 = add i64 %109, -4
  %111 = inttoptr i64 %110 to ptr
  %112 = load i64, ptr %111
  store i64 %112, ptr %30
  %113 = load i64, ptr %27
  %114 = load i64, ptr %14
  %115 = mul i64 %114, 4
  %116 = add i64 %115, %113
  %117 = add i64 %116, -4
  %118 = inttoptr i64 %117 to ptr
  %119 = load i64, ptr %30
  store i64 %119, ptr %118
  store i64 1, ptr %31
  %120 = load i64, ptr %31
  store i64 %120, ptr %32
  store ptr @camlArray_rev__rev_1, ptr %33
  %121 = load i64, ptr %33
  %122 = add i64 %121, 24
  %123 = inttoptr i64 %122 to ptr
  %124 = load i64, ptr %123
  store i64 %124, ptr %34
  %125 = load i64, ptr %34
  %126 = load i64, ptr %25
  %127 = mul i64 %126, 4
  %128 = add i64 %127, %125
  %129 = add i64 %128, -4
  %130 = inttoptr i64 %129 to ptr
  %131 = load i64, ptr %20
  store i64 %131, ptr %130
  store i64 1, ptr %35
  %132 = load i64, ptr %35
  store i64 %132, ptr %36
  %133 = load i64, ptr %14
  %134 = load i64, ptr %13
  %135 = icmp slt i64 %133, %134
  br i1 %135, label %L128, label %136
136:
  %137 = load i64, ptr %14
  %138 = load i64, ptr %13
  %139 = icmp sgt i64 %137, %138
  br i1 %139, label %L128, label %L131
L128:                                                ; preds = %L115
  %140 = load i64, ptr %14
  store i64 %140, ptr %37
  %141 = load i64, ptr %37
  %142 = add i64 %141, 2
  store i64 %142, ptr %37
  %143 = load i64, ptr %37
  store i64 %143, ptr %38
  %144 = load i64, ptr %38
  store i64 %144, ptr %14
  br label %L115
L131:                                                ; preds = %L115
  store i64 1, ptr %39
  %145 = load i64, ptr %39
  store i64 %145, ptr %2
  %146 = load i64, ptr %2
  ret i64 %146
L135:                                                ; preds = %L101
  store i64 1, ptr %40
  %147 = load i64, ptr %40
  store i64 %147, ptr %2
  %148 = load i64, ptr %2
  ret i64 %148
}

define i64 @camlArray_rev__entry()  {
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca i64
  %15 = alloca i64
  br label %L1
L1:
  br label %L142
L142:                                                ; preds = %L1
  store ptr @camlArray_rev_data, ptr %3
  %16 = load i64, ptr %3
  %17 = add i64 %16, 0
  %18 = inttoptr i64 %17 to ptr
  %19 = load i64, ptr %18
  store i64 %19, ptr %4
  %20 = load i64, ptr %4
  store i64 %20, ptr %4
  %21 = load i64, ptr %4
  store i64 %21, ptr %5
  store ptr @camlArray_rev__rev_1, ptr %6
  %22 = load i64, ptr %6
  %23 = add i64 %22, 24
  %24 = inttoptr i64 %23 to ptr
  %25 = load i64, ptr %5
  store i64 %25, ptr %24
  store ptr @camlArray_rev, ptr %7
  %26 = load i64, ptr %7
  %27 = add i64 %26, 0
  %28 = inttoptr i64 %27 to ptr
  %29 = load i64, ptr %5
  store i64 %29, ptr %28
  store ptr @camlArray_rev_data, ptr %8
  %30 = load i64, ptr %8
  %31 = add i64 %30, 8
  %32 = inttoptr i64 %31 to ptr
  %33 = load i64, ptr %32
  store i64 %33, ptr %9
  %34 = load i64, ptr %9
  store i64 %34, ptr %9
  %35 = load i64, ptr %9
  store i64 %35, ptr %10
  store ptr @camlArray_rev__rev_1, ptr %11
  %36 = load i64, ptr %11
  %37 = add i64 %36, 16
  %38 = inttoptr i64 %37 to ptr
  %39 = load i64, ptr %10
  store i64 %39, ptr %38
  store ptr @camlArray_rev, ptr %12
  %40 = load i64, ptr %12
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to ptr
  %43 = load i64, ptr %10
  store i64 %43, ptr %42
  store ptr @camlArray_rev, ptr %13
  %44 = load i64, ptr %13
  store i64 %44, ptr %14
  %45 = load i64, ptr %14
  store i64 %45, ptr %2
  store i64 1, ptr %15
  %46 = load i64, ptr %15
  store i64 %46, ptr %1
  %47 = load i64, ptr %1
  ret i64 %47
}

@camlArray_rev__gc_roots = global { ptr, ptr, i64, i64 } { ptr @camlArray_rev, ptr @camlArray_rev__rev_1, i64 0, i64 3840 }
@camlArray_rev = global { i64, i64, ptr, i64 } { i64 1, i64 1, ptr @camlArray_rev__rev_1, i64 5111 }
@camlArray_rev__rev_1 = global { ptr, i64, i64, i64 } { ptr @camlArray_rev__rev_0_1_code, i64 108086391056891911, i64 1, i64 1 }
@camlArray_rev_data = external global ptr

@camlArray_rev__data_end = global i64 0
define void @camlArray_rev__code_end() { ret void }
@camlArray_rev__frametable = global i64 0
