source_filename = "const_val.ml"

@camlConst_val__data_begin = global {  } {  }, align 8, section ".data"
define void @camlConst_val__code_begin() { unreachable }

@camlConst_val__gc_roots = global { i64 } { i64 0 }, align 8, section ".data"
@.header.camlConst_val = global { i64 } { i64 1792 }, align 8, section ".data"
@camlConst_val = global { i64 } { i64 75 }, align 8, section ".data"
define  cc 104 { { ptr, ptr }, { ptr addrspace(1) } } @camlConst_val__entry(ptr %0, ptr %1) noinline gc "statepoint-example" {
  %ds = alloca ptr
  store ptr %0, ptr %ds
  %alloc = alloca ptr
  store ptr %1, ptr %alloc
  %3 = alloca i64
  %4 = alloca ptr addrspace(1)
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  br label %L1
L1:
  br label %L104
L104:                                                ; preds = %L1
  store ptr @camlConst_val, ptr %5
  %8 = load i64, ptr %5
  store i64 %8, ptr %6
  %9 = load i64, ptr %6
  %10 = inttoptr i64 %9 to ptr addrspace(1)
  store ptr addrspace(1) %10, ptr %4
  store i64 1, ptr %7
  %11 = load i64, ptr %7
  store i64 %11, ptr %3
  %12 = extractvalue { { { ptr, ptr }, { ptr addrspace(1) } } } poison, 0
  %13 = load ptr, ptr %ds
  %14 = insertvalue { { ptr, ptr }, { ptr addrspace(1) } } %12, ptr %13, 0, 0
  %15 = load ptr, ptr %alloc
  %16 = insertvalue { { ptr, ptr }, { ptr addrspace(1) } } %14, ptr %15, 0, 1
  %17 = load i64, ptr %3
  %18 = inttoptr i64 %17 to ptr addrspace(1)
  %19 = insertvalue { { ptr, ptr }, { ptr addrspace(1) } } %16, ptr addrspace(1) %18, 1, 0
  ret { { ptr, ptr }, { ptr addrspace(1) } } %19
}

declare i64 @llvm.read_register.i64(metadata)
declare void @llvm.write_register.i64(metadata, i64)


@camlConst_val__data_end = global {  } {  }, align 8, section ".data"
define void @camlConst_val__code_end() { unreachable }
