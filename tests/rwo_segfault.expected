module List = ListLabels
type 'a expr =
    Base of 'a
  | Const of bool
  | And of 'a expr list
  | Or of 'a expr list
  | Not of 'a expr
val eval : 'a expr -> ('a -> bool) -> bool = <fun>
val and_ : 'a expr list -> 'a expr = <fun>
val or_ : 'a expr list -> 'a expr = <fun>
val not_ : 'a expr -> 'a expr = <fun>
val simplify : 'a expr -> 'a expr = <fun>
- : string expr = Not (Base "it's raining")
